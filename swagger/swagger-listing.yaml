---
  swagger: "2.0"
  info: 
    version: "1.2.0"
    title: "SFMOHD API"
    description:  | 
      The first version of the SFMO Housing API is an exciting step in providing information to listings to apply.  We want to make it easy for you, to build apps and have open access to city Listing data to apply for affordable housing
      
      There are two ways to connect to the api-  
      The listing data is public domain and can be accessed at <publicsite>/salesforce.com/apexrest
      You can connect your listing information to this 
      
      To connect a full fledge application to the city data in order to facilitate applications please email the city, and we will get you the proper credentials.  
      All application data requires oauth to connect.
      
 
  host: "salesforce.com"
  schemes: 
    - "https"
  basePath: "/services/apexrest"
  produces: 
    - "application/json"
    
  securityDefinitions:
    restrictedAccess:
      type: oauth2
      flow: password
      tokenUrl: https://test.salesforce.com/services/oauth2/token
      scopes:
        Listing: |
          Information of a particular listing, including qualifications, to apply for listing as well as details on the listing itself - this is available via public and pwd based oauth
        ListingDetails: | 
          Listing information coupled with detailed information on unit summary data, and if a criteria was passed in the request, it will show the "match" on the citeria
        UnitSummary: summary information on particular unit types for a listing
        ShortForm: the shortform application for a particular person for a particular listing this includes contact/household information for a person
        LotteryMember: current lottery memebers for a given listing

        ami: ami calculation
    public:
      type: apiKey
      in: query
      name: access_token
      
  security:
    - restrictedAccess:
      - Listing
      - ListingDetails
      - LotteryMember
      - UnitSummary
      - ShortForm
      - ami
  
    - public: []
 

  paths: 
    /Listing/{sfdcid}: 
      get: 
        
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "sfdcid"
            in: "path"
            description: "sfdc listing id put into the path"
            required: true
            type: "string"
        tags: 
          - "Listing"
        responses: 
          200: 
            description: "An array of listings"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Listing__c"
         
    /Listing: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "sfdc listing id"
            required: false
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "sfdc listing ids split by ','"
            required: false
            type: "string"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "string"
          - 
            name: "incomelevel"
            in: "query"
            description: "income level"
            required: false
            type: "string"
          - 
            name: "childrenUnder6"
            in: "query"
            description: "number of children under 6"
            required: false
            type: "string"
          - 
            name: "preference"
            in: "query"
            description: "Certificate of Preference, Ellis Act, Live\\Work"
            required: false
            type: "string"
     
        tags: 
          - "Listing"
        responses: 
          200: 
            description: "An array of listing"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Listing__c"
     
    /ListingDetails/{sfdcid}: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "sfdcid"
            in: "path"
            description: "sfdc listing id put into the path"
            required: true
            type: "string"
        tags: 
          - "Listing"
        responses: 
          200: 
            description: "An array of listing details"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
      
    /ListingDetails: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "sfdc listing id"
            required: false
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "sfdc listing id"
            required: false
            type: "string"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "string"
          - 
            name: "incomelevel"
            in: "query"
            description: "income level"
            required: false
            type: "string"
          - 
            name: "childrenUnder6"
            in: "query"
            description: "number of children under 6"
            required: false
            type: "string"
          - 
            name: "preference"
            in: "query"
            description: "Certificate of Preference, Ellis Act, Live\\Work"
            required: false
            type: "string"
        tags: 
          - "Listing"    
        responses: 
          200: 
            description: "An array of listing details"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
    /ListingDetails/Criteria/: 
      get: 
        description: "This queries the Listing information and its summary information."
        parameters: 
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "string"
          - 
            name: "incomelevel"
            in: "query"
            description: "income level"
            required: false
            type: "string"
          - 
            name: "childrenUnder6"
            in: "query"
            description: "number of children under 6"
            required: false
            type: "string"
          - 
            name: "preference"
            in: "query"
            description: "Certificate of Preference, Ellis Act, Live\\Work"
            required: false
            type: "string"
        tags: 
          - "Listing"    
        responses: 
          200: 
            description: "An array of listingdetails queried by criteria <this end point doesn't exist it is proposed>"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
    /Listing/Units/{id}': 
      get: 
        description: "returns Units for listing based on Listing ID"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "listing id"
            required: true
            type: "string"
        tags: 
          - "Listing"    
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Unit__c"
    /Listing/Units/': 
      get: 
        description: "returns Units for listing based on Listing ID"
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "listing id"
            required: true
            type: "string"
        tags: 
          - "Listing"    
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Unit__c"
    /LotteryPreference/{id}': 
      get: 
        description: "returns lottery Preference by ID"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "lottery preference id"
            required: true
            type: "string"
        tags: 
          - "Listing" 
          - "Shortform Application"   
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Preference__c"
    /LotteryPreference/': 
      get: 
        description: "returns lottery preferences by ID.  If not id is provided it returns all lottery preferences"
        parameters: 
     
          - 
            name: "id"
            in: "query"
            description: "lottery preference id"
            required: false
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "lottery ids separated by ',' "
            required: false
            type: "string"
       
        tags: 
          - "Listing" 
          - "Shortform Application"     
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Preference__c"

    /Listing/UnitSummary/{id}': 
      get: 
        description: "returns UnitSummary for listings by unit type"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "listing id"
            required: true
            type: "string"
        tags: 
          - "Listing"       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/UnitSummary"                
    /Listing/UnitSummary/': 
      get: 
        description: "returns UnitSummary for listings by unit type"
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "listing id"
            required: true
            type: "string"
        tags: 
          - "Listing" 


        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/UnitSummary"
    /ami: 
      get: 
        description: "Returns the ami table value based on 2 passed in parameters"
        parameters: 
          - 
            name: "percent"
            in: "query"
            description: "Percent of median"
            required: false
            type: "number"
          - 
            name: "amount"
            in: "query"
            description: "amount"
            required: false
            type: "number"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "number"
        tags: 
          - "AMI"    
        responses: 
          200: 
            description: "AMI entry"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/AMI"
      
    /ami/calc/: 
      get: 
        description: "Calculates the percentage ami based off household and amount and returns ami"
        parameters: 
          - 
            name: "amount"
            in: "query"
            description: "amount"
            required: true
            type: "number"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: true
            type: "number"
        tags: 
          - "AMI"  
        responses: 
          200: 
            description: "AMI entry"
            schema: 
              $ref: "#/definitions/AMI"
    /LotteryMember/{id}': 
      get: 
        security:
          - restrictedAccess: 
            - LotteryMember
            - Listing
        description: "returns lottery members by listing id"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "listing id"
            required: true
            type: "string"
        tags: 
          - "Listing"  
          - "Shortform Application"  
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Member__c" 
    /LotteryMember/': 
      get: 
        security:
          - restrictedAccess: 
            - LotteryMember
            - Listing

        description: "returns lottery Members for listing - either id or ids is required"
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "listing id"
            required: true
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "listing ids by ',' "
            required: true
            type: "string"
        tags: 
          - "Listing"  
          - "Shortform Application"  
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Member__c" 
     
    /shortForm/list/{ContactID}: 
      get: 
        security:
          - restrictedAccess: 
            - ShortForm
        parameters:
          - in: path
            name: ContactID
            description: list of shortforms by contact
            required: true
            type: string
        description: "This returns the Listing information and its summary information."
        tags: 
          - "Shortform Application"  
  
        responses: 
          "404":
            description: Short form not found
          "200":
            description: successful operation
            schema:
              type: array
              items:
                $ref: '#/definitions/ShortForm'
          "400":
            description: Invalid ID supplied
            
    /shortForm/{shortFormId}: 
      get: 
        security:
          - restrictedAccess: 
            - ShortForm
        parameters:
          - in: path
            name: shortFormId
            description: ID of shortform
            required: true
            type: string
        description: "This returns the Listing information and its summary information."
        tags: 
          - "Shortform data"  
          - "Application data"    
        responses: 
          "404":
            description: Short form not found
          "200":
            description: successful operation
            schema:
              $ref: "#/definitions/ShortForm"
          "400":
            description: Invalid ID supplied
    /shortForm/: 
      post: 
        security:
          - restrictedAccess: 
            - ShortForm
        parameters:
        - in: body
          name: body
          description: short form placed
          required: false
          schema:
            $ref: "#/definitions/ShortForm"
        tags: 
          - "Shortform Application"  

        responses: 
          "404":
            description: Short form not found
          "200":
            description: Success
            schema:
              $ref: "#/definitions/ShortForm"
          "400":
            description: Invalid ID supplied
    /shortForm/delete/:
      post:
        security:
          - restrictedAccess: 
            - ShortForm
        description: deletes specified application
        parameters:
        - name: id
          in: query
          description: ID shortForm To Delete
          type: string
          required: true
        tags: 
           - "Shortform Application"  
        responses:
          200:
            description: OK
    /shortForm/contact/delete:
      post:
        security:
          - restrictedAccess: 
            - ShortForm
        description: deletes specified contact from household
        parameters:
        - name: id
          in: query
          description: ID of contact to delete
          type: string
          required: true
          
        tags: 
          - "Shortform Application"  
        responses:
          200:
            description: OK    
  definitions: 

    UnitSummary: 
      type: "object"
      description: "summary statistics of a given unit type per listing"
      properties: 
        listing ID: 
          type: "string"
          description: "the listing id"
        unitType: 
          type: "string"
          description: "the type of unit.  (1br, 2br, studio)"
        totalUnits: 
          type: "integer"
          description: "total number of units at this type per this listing"
        minOccupancy: 
          type: "integer"
          description: "fewest tenants available at this unittype"
        maxOccupancy: 
          type: "integer"
          description: "most tenants available at this unittype"
        minSquareFt: 
          type: "integer"
          description: "Smallest unit at this type for this listing"
        maxSquareFt: 
          type: "integer"
          description: "largest unit at this type for this listing"
        minMonthlyRent: 
          type: "number"
          description: "lowest rent at this type for this listing"
        maxMonthlyRent: 
          type: "number"
          description: "highest rent at this type for this listing"
        minRentalMinIncome: 
          type: "number"
          description: "lowest minimum required income at this type for this listing"
        maxRentalMinIncome: 
          type: "number"
          description: "highest minimum required income at this type for this listing"
   

    ListingDetails: 
      type: "object"
      description: "summary statistics of a given unit type per listing"
      properties: 
        listingID: 
          type: "string"
          description: "the listing id"
        unitSummary: 
          type: "array"
          items: 
            $ref: "#/definitions/UnitSummary"
        doesMatch: 
          type: "boolean"
          description: "does listing match passed criteria"
        listing: 
            $ref: '#/definitions/Listing__c'
    Listing__c: 
      type: "object"
      description: ""
      properties: 
        Building_Name__c: 
          type: "string"
          description: ""
        Building_Street_Address__c: 
          type: "string"
          description: ""
        Building_City__c: 
          type: "string"
          description: ""
        Building_State__c: 
          type: "string"
          description: ""
        Building_Zip_Code__c: 
          type: "string"
          description: ""
        Developer__c: 
          type: "string"
          description: "Name of the Developer for the Building."
        Description__c: 
          type: "string"
          description: "Description of the Listing"
        Neighborhood__c: 
          type: "string"
          description: "Neighborhood for the listing."
        Year_Built__c: 
          type: "number"
          format: "double"
          description: ""
        Application_Due_Date__c: 
          type: "string"
          format: "date"
          description: "Due Date for Applications for the lottery for this listing."
        Building_URL__c: 
          type: "string"
          description: ""
        Legal_Disclaimers__c: 
          type: "string"
          description: ""
        Application_Organization__c: 
          type: "string"
          description: ""
        Application_Street_Address__c: 
          type: "string"
          description: ""
        Application_City__c: 
          type: "string"
          description: ""
        Application_State__c: 
          type: "string"
          description: ""
        Application_Postal_Code__c: 
          type: "string"
          description: ""
        Application_Phone__c: 
          type: "string"
          description: ""
        Lottery_Summary__c: 
          type: "string"
          description: "Summary of the Lottery Results."
        Lottery_Results_Date__c: 
          type: "string"
          format: "date"
          description: "Date Lottery Results are posted"
        Lottery_End__c: 
          type: "string"
          format: "date-time"
          description: "End of the Lottery - DateTime"
        Lottery_Start_Time__c: 
          type: "string"
          description: ""
        Lottery_End_Time__c: 
          type: "string"
          description: ""
        Lottery_Venue__c: 
          type: "string"
          description: ""
        Lottery_Street_Address__c: 
          type: "string"
          description: ""
        Lottery_City__c: 
          type: "string"
          description: ""
        Lottery_Date__c: 
          type: "string"
          format: "date-time"
          description: ""
        AMI_Percentage__c: 
          type: "null"
          description: ""
        Preference_Detail__c: 
          type: "string"
          description: ""
        Credit_Rating__c: 
          type: "string"
          description: ""
        Criminal_History__c: 
          type: "string"
          description: ""
        Eviction_History__c: 
          type: "string"
          description: ""
        Leasing_Agent_Name__c: 
          type: "string"
          description: ""
        Leasing_Agent_Title__c: 
          type: "string"
          description: ""
        Leasing_Agent_Email__c: 
          type: "string"
          description: ""
        Leasing_Agent_Phone__c: 
          type: "string"
          description: ""
        Lottery_Results__c: 
          type: "boolean"
          description: "Indicates there is at least one lottery winner"
        Lottery_Winners__c: 
          type: "number"
          format: "double"
          description: "Rollup sumary with Count of people who have been selected as winning lottery and therefore, the status of their lottery member = Winner."
        Office_Open__c: 
          type: "string"
          description: ""
        Office_Closed__c: 
          type: "string"
          description: ""
        Organization_URL__c: 
          type: "string"
          description: ""
        Download_URL__c: 
          type: "null"
          description: ""
        Fee__c: 
          type: "number"
          description: ""
        Deposit_Min__c: 
          type: "number"
          description: ""
        Deposit_Max__c: 
          type: "number"
          description: ""
        Costs_Not_Included__c: 
          type: "string"
          description: "Detailed Information about other costs not included with rent. Converted to text field from currency."
        Lottery_Preferences__c: 
          type: "string"
          description: ""
        Rental_Assistance__c: 
          type: "string"
          description: "To be further built but placeholder for rental assistance"
        Amenities__c: 
          type: "string"
          description: ""
        Accessibility__c: 
          type: "string"
          description: ""
        Building_Selection_Criteria__c: 
          type: "string"
          description: ""
        Required_Documents__c: 
          type: "string"
          description: ""
        Smoking_Policy__c: 
          type: "string"
          description: "Will be set via code from Property."
        Pet_Policy__c: 
          type: "string"
          description: ""
  
    Unit__c:
      type: object
      description: ''
      properties:
        Unit_Type__c:
          type: string
          description: Description of units.
        BMR_Rent_Monthly__c:
          type: number
          description: Monthly Rent for BMR Unit
        BMR_Rental_Minimum_Monthly_Income_Needed__c:
          type: number
          description: ''
        Unit_Square_Footage__c:
          type: number
          format: double
          description: Square Footage of the Unit.
        Unit_Number__c:
          type: string
          description: ''
        Unit_Floor__c:
          type: string
          description: ''
        Other_Accessibility_Information__c:
          type: string
          description: Other Accessibility Information
        Number_of_Bathrooms__c:
          type: number
          format: double
          description: ''
  
    AMI: 
      type: "object"
      description: "summary statistics of a given unit type per listing"
      properties: 
        percent: 
          type: "number"
          description: "precentage"
        numOfHousehold: 
          type: "number"
          description: "number of people"
        amount: 
          type: "number"
          description: "amount of threshhold"
          
    Lottery_Preference__c:
      type: object
      description: ''
      properties:
        Name:
          type: string
          description: ''
        Description__c:
          type: string
          description: ''
        
    Lottery_Member__c:
      type: object
      description: Lotttery Members. Will ultimately be a join of contacts and listings but initially it will just be a child of listings with information about the lottery results.
      properties:
        Lottery_Number__c:
          type: number
          format: double
          description: Lottery Number for the Specific Lottery Member.
        Rank__c:
          type: number
          format: double
          description: Rank of the Lottery Member in the Lottery Results
        Listing__c:
          type: string
          description: Rank of the Lottery Member in the Lottery Results
        Status__c:
          type: string
          description: Status of the Lottery Member for the given Lottery
    ShortForm: 
      type: "object"
      description: "ShortForm for housing"
      properties: 
        ID: 
          type: "string"
          description: "Sfdc ID"
        Primary Applicant:  
          $ref: '#/definitions/Contact'

        Secondary Contact:  
          $ref: '#/definitions/Contact'

        Household Members:  
          type: array
          items:
              $ref: '#/definitions/Contact'
        Works in San Francisco: 
          type: "boolean"
          description: "currently works In SF"
        Current Status: 
          type: "string"
          description: "homeless, renting, home owner?"
        Years Homeless: 
          type: "integer"
          description: "number of years homeless"
        isResident: 
          type: "boolean"
          description: "is a resident of SF"
       
     
    Contact: 
      type: "object"
      description: "Applicant Contact"
      properties: 
        ID: 
          type: "string"
          description: "sfdc ID"
        firstName: 
          type: "string"
          description: "first name"
        lastName: 
          type: "string"
          description: "the listing id"
        DOB: 
          type: "string"
          description: "date of Birth"
        email: 
          type: "string"
          description: "email"
        phone: 
          type: "string"
          description: "phone number"
        address: 
          type: "string"
          description: "Address"
        city: 
          type: "string"
          description: "City"
        state: 
          type: "string"
          description: "State"
        zip: 
          type: "string"
          description: "Zip"
        mailingAddress: 
          type: "string"
          description: "Mailing address"
        mailingCity: 
          type: "string"
          description: "Mailing City"
        mailingState: 
          type: "string"
          description: "Mailing State"
        mailingZip: 
          type: "string"
          description: "Mailing zip"
        workAddress: 
          type: "string"
          description: "working address"
        workCity: 
          type: "string"
          description: "working City"
        workState: 
          type: "string"
          description: "working state"
        workZip: 
          type: "string"
          description: "working zip"
        gender: 
          type: "string"
          description: "gender"
        holdsCOP: 
          type: "boolean"
          description: "has a certificate of preference"
        holdsDTP: 
          type: "boolean"
          description: "has displaced tenant preference"
        relationship: 
          type: "string"
          description: "relationship to primary applicant"
        annualIncome: 
          type: "number"
          description: "displaced tenant pref"
        incomeType: 
          type: "string"
          description: "displaced tenant pref"
   
  