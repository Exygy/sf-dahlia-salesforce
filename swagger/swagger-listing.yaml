---
  swagger: "2.0"
  info: 
    title: "SFMOHD API"
    description: "Read Listing Data with Salesforce"
    version: "1.2.0"
  host: "salesforce.com"
  schemes: 
    - "https"
  basePath: "/services/apexrest"
  produces: 
    - "application/json"
  paths: 
    /Listing/{sfdcid}: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "sfdcid"
            in: "path"
            description: "sfdc listing id put into the path"
            required: true
            type: "string"
        tags: 
          - "ListingDetails"
        responses: 
          200: 
            description: "An array of products"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
         
    /Listing: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "sfdc listing id"
            required: false
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "sfdc listing ids split by ','"
            required: false
            type: "string"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "string"
          - 
            name: "incomelevel"
            in: "query"
            description: "income level"
            required: false
            type: "string"
          - 
            name: "childrenUnder6"
            in: "query"
            description: "number of children under 6"
            required: false
            type: "string"
          - 
            name: "preference"
            in: "query"
            description: "Certificate of Preference, Ellis Act, Live\\Work"
            required: false
            type: "string"
          - 
            name: "pref2"
            in: "query"
            description: "here is a very long descirippoint that wer are writing blah blah blah"
            required: false
            type: "string"
        tags: 
          - "Products"
        responses: 
          200: 
            description: "An array of products"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
     
    /ListingDetails/{sfdcid}: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "sfdcid"
            in: "path"
            description: "sfdc listing id put into the path"
            required: true
            type: "string"
        tags: 
          - "ListingDetails"
        responses: 
          200: 
            description: "An array of products"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
      
    /ListingDetails: 
      get: 
        description: "This returns the Listing information and its summary information."
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "sfdc listing id"
            required: false
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "sfdc listing id"
            required: false
            type: "string"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "string"
          - 
            name: "incomelevel"
            in: "query"
            description: "income level"
            required: false
            type: "string"
          - 
            name: "childrenUnder6"
            in: "query"
            description: "number of children under 6"
            required: false
            type: "string"
          - 
            name: "preference"
            in: "query"
            description: "Certificate of Preference, Ellis Act, Live\\Work"
            required: false
            type: "string"
        tags: 
          - "Products"
        responses: 
          200: 
            description: "An array of products"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/ListingDetails"
    /Listing/Units/{id}': 
      get: 
        description: "returns Units for listing based on UNIT ID"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "listing id"
            required: true
            type: "string"
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Unit__c"
    /Listing/Units/': 
      get: 
        description: "returns Units for listing based on UNIT ID"
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "listing id"
            required: true
            type: "string"
       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Unit__c"
    /LotteryPreference/{id}': 
      get: 
        description: "returns stats for lottery Preference by ID"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "lottery preference id"
            required: true
            type: "string"
     
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Preference__c"
    /LotteryPreference/': 
      get: 
        description: "returns lottery preferences by ID.  If not id is provided it returns all lottery preferences"
        parameters: 
     
          - 
            name: "id"
            in: "query"
            description: "lottery preference id"
            required: false
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "lottery ids separated by ',' "
            required: false
            type: "string"
       
       
       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Preference__c"
    /LotteryMember/{id}': 
      get: 
        description: "returns stats for listings by unit type"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "listing id"
            required: true
            type: "string"
       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Member__c" 
    /LotteryMember/': 
      get: 
        description: "returns lottery Members for listing - either id or ids is required"
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "listing id"
            required: true
            type: "string"
          - 
            name: "ids"
            in: "query"
            description: "listing ids by ',' "
            required: true
            type: "string"
       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/Lottery_Member__c" 
    
    /Listing/UnitStats/{id}': 
      get: 
        description: "returns stats for listings by unit type"
        parameters: 
          - 
            name: "id"
            in: "path"
            description: "listing id"
            required: true
            type: "string"
       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/UnitStat"                
    /Listing/UnitStats/': 
      get: 
        description: "returns stats for listings by unit type"
        parameters: 
          - 
            name: "id"
            in: "query"
            description: "listing id"
            required: true
            type: "string"
       
        responses: 
          200: 
            description: "Units by listing ID"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/UnitStat"
    /ami: 
      get: 
        description: "Returns the ami table value based on 2 passed in parameters"
        parameters: 
          - 
            name: "percent"
            in: "query"
            description: "Percent of median"
            required: false
            type: "number"
          - 
            name: "amount"
            in: "query"
            description: "amount"
            required: false
            type: "number"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: false
            type: "number"
        responses: 
          200: 
            description: "AMI entry"
            schema: 
              type: "array"
              items: 
                $ref: "#/definitions/AMI"
      
    /ami/calc/: 
      get: 
        description: "Calculates the percentage ami based off household and amount and returns ami"
        parameters: 
          - 
            name: "amount"
            in: "query"
            description: "amount"
            required: true
            type: "number"
          - 
            name: "householdsize"
            in: "query"
            description: "household size"
            required: true
            type: "number"
        responses: 
          200: 
            description: "AMI entry"
            schema: 
              $ref: "#/definitions/AMI"
      
  definitions: 
    UnitSummary: 
      type: "object"
      description: "summary statistics of a given unit type per listing"
      properties: 
        listing ID: 
          type: "string"
          description: "the listing id"
        unitType: 
          type: "string"
          description: "the type of unit.  (1br, 2br, studio)"
        totalUnits: 
          type: "integer"
          description: "total number of units at this type per this listing"
        minOccupancy: 
          type: "integer"
          description: "fewest tenants available at this unittype"
        maxOccupancy: 
          type: "integer"
          description: "most tenants available at this unittype"
        minSquareFt: 
          type: "integer"
          description: "Smallest unit at this type for this listing"
        maxSquareFt: 
          type: "integer"
          description: "largest unit at this type for this listing"
        newfield: 
          type: "integer"
          description: "largest unit at this type for this listing"
    ListingDetails: 
      type: "object"
      description: "summary statistics of a given unit type per listing"
      properties: 
        listingID: 
          type: "string"
          description: "the listing id"
        unitSummary: 
          type: "array"
          items: 
            $ref: "#/definitions/UnitSummary"
        doesMatch: 
          type: "boolean"
          description: "does listing match passed criteria"
        listing: 
            $ref: '#/definitions/Listing__c'
    Listing__c: 
      type: "object"
      description: ""
      properties: 
        Building_Name__c: 
          type: "string"
          description: ""
        Building_Street_Address__c: 
          type: "string"
          description: ""
        Building_City__c: 
          type: "string"
          description: ""
        Building_State__c: 
          type: "string"
          description: ""
        Building_Zip_Code__c: 
          type: "string"
          description: ""
        Developer__c: 
          type: "string"
          description: "Name of the Developer for the Building."
        Description__c: 
          type: "string"
          description: "Description of the Listing"
        Neighborhood__c: 
          type: "string"
          description: "Neighborhood for the listing."
        Year_Built__c: 
          type: "number"
          format: "double"
          description: ""
        Application_Due_Date__c: 
          type: "string"
          format: "date"
          description: "Due Date for Applications for the lottery for this listing."
        Building_URL__c: 
          type: "string"
          description: ""
        Legal_Disclaimers__c: 
          type: "string"
          description: ""
        Application_Organization__c: 
          type: "string"
          description: ""
        Application_Street_Address__c: 
          type: "string"
          description: ""
        Application_City__c: 
          type: "string"
          description: ""
        Application_State__c: 
          type: "string"
          description: ""
        Application_Postal_Code__c: 
          type: "string"
          description: ""
        Application_Phone__c: 
          type: "string"
          description: ""
        Lottery_Summary__c: 
          type: "string"
          description: "Summary of the Lottery Results."
        Lottery_Results_Date__c: 
          type: "string"
          format: "date"
          description: "Date Lottery Results are posted"
        Lottery_End__c: 
          type: "string"
          format: "date-time"
          description: "End of the Lottery - DateTime"
        Lottery_Start_Time__c: 
          type: "string"
          description: ""
        Lottery_End_Time__c: 
          type: "string"
          description: ""
        Lottery_Venue__c: 
          type: "string"
          description: ""
        Lottery_Street_Address__c: 
          type: "string"
          description: ""
        Lottery_City__c: 
          type: "string"
          description: ""
        Lottery_Date__c: 
          type: "string"
          format: "date-time"
          description: ""
        AMI_Percentage__c: 
          type: "null"
          description: ""
        Preference_Detail__c: 
          type: "string"
          description: ""
        Credit_Rating__c: 
          type: "string"
          description: ""
        Criminal_History__c: 
          type: "string"
          description: ""
        Eviction_History__c: 
          type: "string"
          description: ""
        Leasing_Agent_Name__c: 
          type: "string"
          description: ""
        Leasing_Agent_Title__c: 
          type: "string"
          description: ""
        Leasing_Agent_Email__c: 
          type: "string"
          description: ""
        Leasing_Agent_Phone__c: 
          type: "string"
          description: ""
        Lottery_Results__c: 
          type: "boolean"
          description: "Indicates there is at least one lottery winner"
        Lottery_Winners__c: 
          type: "number"
          format: "double"
          description: "Rollup sumary with Count of people who have been selected as winning lottery and therefore, the status of their lottery member = Winner."
        Office_Open__c: 
          type: "string"
          description: ""
        Office_Closed__c: 
          type: "string"
          description: ""
        Organization_URL__c: 
          type: "string"
          description: ""
        Download_URL__c: 
          type: "null"
          description: ""
        Fee__c: 
          type: "number"
          description: ""
        Deposit_Min__c: 
          type: "number"
          description: ""
        Deposit_Max__c: 
          type: "number"
          description: ""
        Costs_Not_Included__c: 
          type: "string"
          description: "Detailed Information about other costs not included with rent. Converted to text field from currency."
        Lottery_Preferences__c: 
          type: "string"
          description: ""
        Rental_Assistance__c: 
          type: "string"
          description: "To be further built but placeholder for rental assistance"
        Amenities__c: 
          type: "string"
          description: ""
        Accessibility__c: 
          type: "string"
          description: ""
        Building_Selection_Criteria__c: 
          type: "string"
          description: ""
        Required_Documents__c: 
          type: "string"
          description: ""
        Smoking_Policy__c: 
          type: "string"
          description: "Will be set via code from Property."
        Pet_Policy__c: 
          type: "string"
          description: ""
  
    Unit__c:
      type: object
      description: ''
      properties:
        Unit_Type__c:
          type: string
          description: Description of units.
        BMR_Rent_Monthly__c:
          type: number
          description: Monthly Rent for BMR Unit
        BMR_Rental_Minimum_Monthly_Income_Needed__c:
          type: number
          description: ''
        Unit_Square_Footage__c:
          type: number
          format: double
          description: Square Footage of the Unit.
        Unit_Number__c:
          type: string
          description: ''
        Unit_Floor__c:
          type: string
          description: ''
        Other_Accessibility_Information__c:
          type: string
          description: Other Accessibility Information
        Number_of_Bathrooms__c:
          type: number
          format: double
          description: ''
    UnitStat: 
      type: "object"
      description: "summary statistics of units type by listing and unit type"
      properties: 
        listingID: 
          type: "string"
          description: "SFDC ID"
        unitType: 
          type: "string"
          description: "Type of Unit"
        totalUnits: 
          type: "number"
          description: "total number of for the listing by unit type "
        minOccupancy: 
          type: "number"
          description: "min occupancy for the listing by unit type"
        maxOccupancy: 
          type: "number"
          description: "min occupancy for the listing by unit type"
        minSquareFt: 
          type: "number"
          description: "max number of square feet for the listing by unit type"
        maxSquareFt: 
          type: "number"
          description: "max number of square feet for the listing by unit type "
    
    AMI: 
      type: "object"
      description: "summary statistics of a given unit type per listing"
      properties: 
        percent: 
          type: "number"
          description: "precentage"
        numOfHousehold: 
          type: "number"
          description: "number of people"
        amount: 
          type: "number"
          description: "amount of threshhold"
          
    Lottery_Preference__c:
      type: object
      description: ''
      properties:
        Name:
          type: string
          description: ''
        Description__c:
          type: string
          description: ''
          
    Lottery_Member__c:
      type: object
      description: Lotttery Members. Will ultimately be a join of contacts and listings but initially it will just be a child of listings with information about the lottery results.
      properties:
        Lottery_Number__c:
          type: number
          format: double
          description: Lottery Number for the Specific Lottery Member.
        Rank__c:
          type: number
          format: double
          description: Rank of the Lottery Member in the Lottery Results
        Listing__c:
          type: string
          description: Rank of the Lottery Member in the Lottery Results
        Status__c:
          type: string
          description: Status of the Lottery Member for the given Lottery
  
